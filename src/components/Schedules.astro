---
// Packages
import { Picture } from 'astro:assets';
import type { ImageMetadata } from 'astro';

interface Speaker {
    name: string;
    title: string;
    tags: string[];
    image: string;
}

interface Session {
    date: string;
    timeSlot: string;
    title: string;
    content: string;
    speakers: Speaker[];
}

interface Props {
    currentDay?: string;
    activeCategory?: string;
}

// Import the schedule data
import scheduleData from "json/Schedule.json";

// Import all images
const imageImports = import.meta.glob<{ default: ImageMetadata }>('images/speakers/*.{jpeg,jpg,png,gif}');
const images = await Promise.all(
    Object.entries(imageImports).map(async ([path, resolver]) => {
        const { default: image } = await resolver();
        return [path.replace('/public', ''), image];
    })
).then(entries => Object.fromEntries(entries));

// Use the provided props or default values
const {
    currentDay = "May 6",
    activeCategory = "ai-model",
} = Astro.props;
---

<section
    class="section section-agenda-grid"
    id="grid"
    data-filter-section
    data-theme-section="light"
    data-bg-section="light"
    data-scroll-section
>
    <div class="container">
        <div class="row row-filter">
            <div class="col date-fw">
                <div class="filter-group" data-filter-group>
                    <div class="date-outerwrap">
                        <div class="date-wrapper">
                            {scheduleData.days.map((day) => (
                                <a
                                    data-barba-update
                                    href={day.url}
                                    class={`single-filter ${currentDay === day.date ? "dateselected" : ""}`}
                                >
                                    <span>{day.title}</span>
                                </a>
                            ))}
                        </div>
                    </div>
                    <div class="date-divider"></div>
                    {scheduleData.categories.map((category) => (
                        <div
                            class="single-filter"
                            data-filter-status={
                                category.id === activeCategory
                                    ? "active"
                                    : "not-active"
                            }
                            data-filter-category={category.id}
                        >
                            <span>{category.name}</span>
                        </div>
                    ))}
                </div>
            </div>
        </div>
        <div class="row row-list accordion visible" data-filter-grid>
            {Object.entries(scheduleData.sessions).map(([categoryId, sessions]) => {
                const filteredSessions = sessions.filter((session: Session) => session.date === currentDay);
                return (
                    <div
                        class="list-group"
                        data-filter-status={
                            categoryId === activeCategory
                                ? "active"
                                : "not-active"
                        }
                        data-filter-category={categoryId}
                    >
                        {filteredSessions.length > 0 ? (
                            <ul class="row row-list">
                                {filteredSessions.map((session: Session) => (
                                    <li
                                        class="single-agenda-card single-accordion-item card-hover"
                                        data-accordion-status="not-active"
                                        data-filter-status="active"
                                        data-filter-category={categoryId}
                                    >
                                        <div
                                            class="top"
                                            data-accordion-toggle={
                                                session.speakers.length > 0 || session.content
                                                    ? true
                                                    : null
                                            }
                                        >
                                            <div class="left">
                                                <div class="timeslot">
                                                    <p class="timedate">{session.date}</p>
                                                    <p>{session.timeSlot}</p>
                                                </div>
                                                <h2 class="h5">{session.title}</h2>
                                            </div>
                                            {(session.speakers.length > 0 || session.content) && (
                                                <div class="plus">
                                                    <div class="plus-fill" />
                                                    <div class="bar bar-top" />
                                                    <div class="bar bar-bottom" />
                                                </div>
                                            )}
                                        </div>
                                        {(session.speakers.length > 0 || session.content) && (
                                            <div class="bottom">
                                                <div class="bottom-wrap">
                                                    <div class="bottom-content">
                                                        {session.content && (
                                                            <div
                                                                class="card-row styled-content"
                                                                set:html={session.content}
                                                            />
                                                        )}
                                                        {session.speakers.length > 0 && (
                                                            <div class="card-row card-row-speakers">
                                                                {session.speakers.map((speaker: Speaker) => (
                                                                    <div class="card-col">
                                                                        <div class="single-speakers-card">
                                                                            <div class="card-row card-row-image">
                                                                                <div class="card-image">
                                                                                    {speaker?.image && images[`/public/images/speakers/${speaker.image}`] && (
                                                                                        <Picture
                                                                                            src={images[`/public/images/speakers/${speaker.image}`]()}
                                                                                            formats={['webp', 'jpg']}
                                                                                            alt={speaker.name}
                                                                                            class="overlay"
                                                                                            widths={[275, 400, 500, 600, 750, 900]}
                                                                                            sizes="(max-width: 700px) 58vw, 450px"
                                                                                        />
                                                                                    )}
                                                                                </div>
                                                                                <div class="card-tags group-tags">
                                                                                    {speaker.tags.map((tag) => (
                                                                                        <div class="single-tag">
                                                                                            <p>{tag}</p>
                                                                                        </div>
                                                                                    ))}
                                                                                </div>
                                                                            </div>
                                                                            <div class="card-row card-row-info">
                                                                                <h3 class="h5">{speaker.name}</h3>
                                                                                <p>{speaker.title}</p>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                ))}
                                                            </div>
                                                        )}
                                                    </div>
                                                </div>
                                            </div>
                                        )}
                                    </li>
                                ))}
                            </ul>
                        ) : (
                            <p>No {scheduleData.categories.find(cat => cat.id === categoryId)?.name} available for this day</p>
                        )}
                    </div>
                );
            })}
        </div>
    </div>
</section>