---
// Packages
import { Picture } from "astro:assets";
import type { ImageMetadata } from "astro";

interface Speaker {
    name: string;
    title: string;
    tags: string[];
    image: string;
}

interface Session {
    date: string;
    timeSlot: string;
    title: string;
    content: string;
    speakers: Speaker[];
    category?: string;
}

interface Props {
    currentDay?: string;
    activeCategory?: string;
}

// Import the schedule data
import scheduleData from "json/Schedule.json";

// Import all images
const images = import.meta.glob<{ default: ImageMetadata }>(
    "images/speakers/*.{jpeg,jpg,png,gif}",
);

// Use the provided props or default values
const { currentDay = "May 6", activeCategory = "All" } = Astro.props;

// Improved function to sort sessions by time
const sortSessionsByTime = (sessions: Session[]) => {
    return sessions.sort((a, b) => {
        // Extract start times from timeSlot
        const [aStartTime] = a.timeSlot.split('-');
        const [bStartTime] = b.timeSlot.split('-');
        
        // Split hours and minutes
        const [aHour, aMinute] = aStartTime.split(':').map(Number);
        const [bHour, bMinute] = bStartTime.split(':').map(Number);
        
        // Compare times
        return (aHour * 60 + aMinute) - (bHour * 60 + bMinute);
    });
};

// Prepare all sessions for the current day
const allSessions: Session[] = Object.entries(scheduleData.sessions)
    .flatMap(([categoryName, categorySessions]) => 
        categorySessions
            .filter((session: Session) => session.date === currentDay)
            .map(session => ({
                ...session,
                category: scheduleData.categories.find(cat => cat.id === categoryName)?.name || categoryName
            }))
    );

// Remove duplicates from all sessions while preserving the first occurrence
const uniqueAllSessions = Array.from(
    new Map(allSessions.map(session => [session.title, session])).values()
);

const sortedAllSessions = sortSessionsByTime(uniqueAllSessions);


---

<div class="filter-container filter-alpha-animate">
    <div class="overlay overlay-dark" data-filter-toggle="close">
        <div class="close" data-filter-toggle="close">
            <div class="close-fill"></div>
            <div class="bar bar-top"></div>
            <div class="bar bar-bottom"></div>
        </div>
    </div>
    <div class="filter-box">
        <p>Filter:</p>
        <div class="filter-group" data-filter-group>
            <div class="date-outerwrap">
                <div class="date-wrapper">
                    {scheduleData.days.map((day) => (
                        <a
                            data-barba-update
                            href={day.url}
                            class={`single-filter ${currentDay === day.date ? "dateselected" : ""}`}
                        >
                            <span>{day.title}</span>
                        </a>
                    ))}
                </div>
            </div>
            <div
                class="single-filter"
                data-filter-status={activeCategory === "All" ? "active" : "not-active"}
                data-filter-category="All"
            >
                <span>All</span>
            </div>
            {scheduleData.categories.map((category) => (
                <div
                    class="single-filter"
                    data-filter-status={category.name === activeCategory ? "active" : "not-active"}
                    data-filter-category={category.name}
                >
                    <span>{category.name}</span>
                </div>
            ))}
        </div>
    </div>
</div>

<section
    class="section section-agenda-grid"
    id="grid"
    data-filter-section
    data-theme-section="light"
    data-bg-section="light"
    data-scroll-section
>
    <div class="container">
        <div class="row row-filter">
            <div class="col date-fw">
                <div class="filter-group" data-filter-group>
                    <div class="date-outerwrap">
                        <div class="date-wrapper">
                            {
                                scheduleData.days.map((day) => (
                                    <a
                                        data-barba-update
                                        href={day.url}
                                        class={`single-filter ${currentDay === day.date ? "dateselected" : ""}`}
                                    >
                                        <span>{day.title}</span>
                                    </a>
                                ))
                            }
                        </div>
                    </div>
                    <div class="date-divider"></div>
                    <div
                        class="single-filter"
                        data-filter-status={activeCategory === "All" ? "active" : "not-active"}
                        data-filter-category="All"
                    >
                        <span>All</span>
                    </div>
                    {
                        scheduleData.categories.map((category) => (
                            <div
                                class="single-filter"
                                data-filter-status={
                                    category.name === activeCategory
                                        ? "active"
                                        : "not-active"
                                }
                                data-filter-category={category.name}
                            >
                                <span>{category.name}</span>
                            </div>
                        ))
                    }
                </div>
            </div>
        </div>
        <div class="row row-list accordion visible" data-filter-grid>
            <div
                class="list-group"
                data-filter-status={activeCategory === "All" ? "active" : "not-active"}
                data-filter-category="All"
            >
                {sortedAllSessions.length > 0 ? (
                    <ul class="row row-list">
                        {sortedAllSessions.map((session: Session) => (
                            <li
                                class="single-agenda-card single-accordion-item card-hover"
                                data-accordion-status="not-active"
                                data-filter-status="active"
                                data-filter-category="All"
                            >
                                <div
                                    class="top"
                                    data-accordion-toggle={
                                        session.speakers.length > 0 || session.content
                                            ? true
                                            : null
                                    }
                                >
                                    <div class="left">
                                        <div class="timeslot">
                                            <p class="timedate">{session.date}</p>
                                            <p>{session.timeSlot}</p>
                                        </div>
                                        <h2 class="h5">{session.title}</h2>
                                    </div>
                                    <div class="tracks">
                                        <div class="single-filter">
                                            <span>{session.category}</span>
                                        </div>
                                    </div>
                                </div>
                                {(session.speakers.length > 0 || session.content) && (
                                    <div class="bottom">
                                        <div class="bottom-wrap">
                                            <div class="bottom-content">
                                                {session.content && (
                                                    <div
                                                        class="card-row styled-content"
                                                        set:html={session.content}
                                                    />
                                                )}
                                                {session.speakers.length > 0 && (
                                                    <div class="card-row card-row-speakers">
                                                        {session.speakers.map(
                                                            (speaker: Speaker) => (
                                                                <div class="card-col">
                                                                    <a class="single-speakers-card" href={`/speakers/${speaker.name.toLowerCase().replace(/\s+/g, "-")}/`}>
                                                                        <div class="card-row card-row-image">
                                                                            <div class="card-image">
                                                                                {speaker?.image &&
                                                                                    images[
                                                                                        `/public/images/speakers/${speaker.image}`
                                                                                    ] && (
                                                                                        <Picture
                                                                                            src={images[
                                                                                                `/public/images/speakers/${speaker.image}`
                                                                                            ]()}
                                                                                            formats={[
                                                                                                "webp",
                                                                                                "jpg",
                                                                                            ]}
                                                                                            alt={speaker.name}
                                                                                            class="overlay"
                                                                                            widths={[ 275,400,500,600, 750, 900 ]}
                                                                                            sizes="(max-width: 700px) 58vw, 450px"
                                                                                        />
                                                                                    )}
                                                                            </div>
                                                                            <div class="card-tags group-tags">
                                                                                {speaker.tags.map(
                                                                                    (tag) => (
                                                                                        <div class="single-tag">
                                                                                            <p>{tag}</p>
                                                                                        </div>
                                                                                    ),
                                                                                )}
                                                                            </div>
                                                                        </div>
                                                                        <div class="card-row card-row-info">
                                                                            <h3 class="h5">
                                                                                {speaker.name}
                                                                            </h3>
                                                                            <p>{speaker.title}</p>
                                                                        </div>
                                                                    </a>
                                                                </div>
                                                            ),
                                                        )}
                                                    </div>
                                                )}
                                            </div>
                                        </div>
                                    </div>
                                )}
                            </li>
                        ))}
                    </ul>
                ) : (
                    <p>No sessions available for this day</p>
                )}
            </div>
            {
                scheduleData.categories.map((category) => {
                    const categorySessions = allSessions.filter(
                        (session) => session.category === category.name
                    );
                    const sortedCategorySessions = sortSessionsByTime(categorySessions);

                    return (
                        <div
                            class="list-group"
                            data-filter-status={
                                category.name === activeCategory
                                    ? "active"
                                    : "not-active"
                            }
                            data-filter-category={category.name}
                        >
                            {sortedCategorySessions.length > 0 ? (
                                <ul class="row row-list">
                                    {sortedCategorySessions.map((session: Session) => (
                                        <li
                                            class="single-agenda-card single-accordion-item card-hover"
                                            data-accordion-status="not-active"
                                            data-filter-status="active"
                                            data-filter-category={category.name}
                                        >
                                            <div
                                                class="top"
                                                data-accordion-toggle={
                                                    session.speakers.length > 0 || session.content
                                                        ? true
                                                        : null
                                                }
                                            >
                                                <div class="left">
                                                    <div class="timeslot">
                                                        <p class="timedate">{session.date}</p>
                                                        <p>{session.timeSlot}</p>
                                                    </div>
                                                    <h2 class="h5">{session.title}</h2>
                                                </div>
                                                <div class="tracks">
                                                    <div class="single-filter">
                                                        <span>{session.category}</span>
                                                    </div>
                                                </div>
                                            </div>
                                            {(session.speakers.length > 0 || session.content) && (
                                                <div class="bottom">
                                                    <div class="bottom-wrap">
                                                        <div class="bottom-content">
                                                            {session.content && (
                                                                <div
                                                                    class="card-row styled-content"
                                                                    set:html={session.content}
                                                                />
                                                            )}
                                                            {session.speakers.length > 0 && (
                                                                <div class="card-row card-row-speakers">
                                                                    {session.speakers.map(
                                                                        (speaker: Speaker) => (
                                                                            <div class="card-col">
                                                                                <a class="single-speakers-card" href={`/speakers/${speaker.name.toLowerCase().replace(/\s+/g, "-")}/`}>
                                                                                    <div class="card-row card-row-image">
                                                                                        <div class="card-image">
                                                                                            {speaker?.image &&
                                                                                                images[
                                                                                                    `/public/images/speakers/${speaker.image}`
                                                                                                ] && (
                                                                                                    <Picture
                                                                                                        src={images[
                                                                                                            `/public/images/speakers/${speaker.image}`
                                                                                                        ]()}
                                                                                                        formats={[
                                                                                                            "webp",
                                                                                                            "jpg",
                                                                                                        ]}
                                                                                                        alt={speaker.name}
                                                                                                        class="overlay"
                                                                                                        widths={[ 275,400,500,600, 750, 900 ]}
                                                                                                        sizes="(max-width: 700px) 58vw, 450px"
                                                                                                    />
                                                                                                )}
                                                                                        </div>
                                                                                        <div class="card-tags group-tags">
                                                                                            {speaker.tags.map(
                                                                                                (tag) => (
                                                                                                    <div class="single-tag">
                                                                                                        <p>{tag}</p>
                                                                                                    </div>
                                                                                                ),
                                                                                            )}
                                                                                        </div>
                                                                                    </div>
                                                                                    <div class="card-row card-row-info">
                                                                                        <h3 class="h5">
                                                                                            {speaker.name}
                                                                                        </h3>
                                                                                        <p>{speaker.title}</p>
                                                                                    </div>
                                                                                </a>
                                                                            </div>
                                                                        ),
                                                                    )}
                                                                </div>
                                                            )}
                                                        </div>
                                                    </div>
                                                </div>
                                            )}
                                        </li>
                                    ))}
                                </ul>
                            ) : (
                                <p>
                                    No{" "}
                                    {category.name}{" "}
                                    sessions available for this day
                                </p>
                            )}
                        </div>
                    );
                })
            }
        </div>
    </div>
</section>

<style>
    .category-tag {
        font-size: 0.75rem;
        color: #666;
        margin-top: 0.25rem;
    }
</style>